# # NOTE wmtag_memo_暂时不构建前端的镜像_因为_把前端构建的dist拷贝给后端的server/dist/目录下_仅需要制作后端镜像就可以了
# # Build frontend dist.
# FROM node:latest AS frontend
# WORKDIR /frontend-build

# COPY ./web/package.json ./web/pnpm-lock.yaml ./

# RUN corepack enable && pnpm i --frozen-lockfile

# COPY ./web/ .

# # 设置淘宝npm镜像
# RUN npm config set registry https://registry.npm.taobao.org 
# # 安装pnpm
# # RUN npm install -g pnpm
# # 安装依赖
# RUN pnpm install

# RUN pnpm build

# NOTE 后端镜像还是要构建的
# Build backend exec file.
FROM golang:1.19.3-alpine3.16 AS backend
WORKDIR /backend-build

COPY . .
# COPY --from=frontend /frontend-build/dist ./server/dist
COPY ./.air/memos_dev.db .

# #构建后端和安装环境
RUN go env -w GOPROXY=https://goproxy.cn,https://mirrors.tencent.com/go/,https://mirrors.aliyun.com/goproxy,https://proxy.golang.com.cn,direct \
    && go mod download -x \
    && go mod tidy

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories \
    && apk update --no-cache \
    && apk add ffmpeg \
    && apk add sqlite3  

RUN CGO_ENABLED=0 go build -o memos ./main.go

EXPOSE 8118

# Directory to store the data, which can be referenced as the mounting point.
RUN mkdir -p /var/opt/memos
# VOLUME /var/opt/memos

COPY ./.air/memos_dev.db /var/opt/memos

RUN ./memos setup --host-username=root --host-password=a123456 --mode dev

ENV MEMOS_MODE="dev"
ENV MEMOS_PORT="8118"

ENTRYPOINT ["./memos"]

# NOTE 这个构建步骤就不进行了
# # Make workspace with above generated files.
# FROM alpine:3.16 AS monolithic
# WORKDIR /usr/local/memos

# RUN apk add --no-cache tzdata
# ENV TZ="UTC"

# COPY --from=backend /backend-build/memos /usr/local/memos/

# EXPOSE 5230

# # Directory to store the data, which can be referenced as the mounting point.
# RUN mkdir -p /var/opt/memos
# VOLUME /var/opt/memos

# ENV MEMOS_MODE="prod"
# ENV MEMOS_PORT="5230"

# ENTRYPOINT ["./memos"]
